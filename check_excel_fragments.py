#!/usr/bin/env python3
"""
Script para verificar los fragmentos espec√≠ficos del Excel
"""

import os
import sys

def check_excel_fragments():
    """Verificar los fragmentos espec√≠ficos del Excel"""
    print("üîç VERIFICANDO FRAGMENTOS DEL EXCEL")
    print("=" * 60)
    print()
    
    try:
        from utils.vector_functions import load_collection
        
        # Cargar colecci√≥n
        vectordb = load_collection("sample_documents")
        
        # Buscar todos los fragmentos que contienen informaci√≥n del Excel
        print("üìä Buscando fragmentos del Excel...")
        excel_docs = vectordb.similarity_search("Excel", k=20)
        
        print(f"üìÑ Fragmentos del Excel encontrados: {len(excel_docs)}")
        print()
        
        for i, doc in enumerate(excel_docs):
            source = doc.metadata.get('source', 'Unknown')
            if 'Inventario_Sostenible.xlsx' in source:
                print(f"üìÑ Fragmento {i+1}:")
                print(f"  Fuente: {os.path.basename(source)}")
                print(f"  Tipo: {doc.metadata.get('file_type', 'Unknown')}")
                print(f"  Contenido: {doc.page_content}")
                print()
                
                # Verificar si contiene "Cargador Solar Port√°til"
                if "Cargador Solar Port√°til" in doc.page_content:
                    print("  ‚úÖ ¬°Contiene 'Cargador Solar Port√°til'!")
                else:
                    print("  ‚ùå No contiene 'Cargador Solar Port√°til'")
                print()
        
        # Buscar espec√≠ficamente "Cargador Solar Port√°til"
        print("üîç Buscando espec√≠ficamente 'Cargador Solar Port√°til'...")
        cargador_docs = vectordb.similarity_search("Cargador Solar Port√°til", k=10)
        
        print(f"üìÑ Fragmentos con 'Cargador Solar Port√°til': {len(cargador_docs)}")
        print()
        
        for i, doc in enumerate(cargador_docs):
            source = doc.metadata.get('source', 'Unknown')
            print(f"üìÑ Fragmento {i+1}:")
            print(f"  Fuente: {os.path.basename(source)}")
            print(f"  Tipo: {doc.metadata.get('file_type', 'Unknown')}")
            print(f"  Contenido: {doc.page_content}")
            print()
        
        return True
        
    except Exception as e:
        print(f"‚ùå Error: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_direct_search():
    """Probar b√∫squeda directa en el texto del Excel"""
    print("\n" + "=" * 60)
    print("üîç B√öSQUEDA DIRECTA EN TEXTO DEL EXCEL")
    print("=" * 60)
    print()
    
    try:
        import pandas as pd
        
        # Cargar Excel
        df = pd.read_excel('./static/sample_documents/Inventario_Sostenible.xlsx')
        
        # Convertir a texto como lo hace el sistema
        text_content = "Columnas: " + ", ".join(df.columns.tolist()) + "\n\n"
        
        for index, row in df.iterrows():
            row_text = f"Fila {index + 1}: "
            for col in df.columns:
                if pd.notna(row[col]):
                    row_text += f"{col}: {row[col]}, "
            text_content += row_text.rstrip(", ") + "\n"
        
        print("üìù Texto completo del Excel:")
        print(text_content)
        print()
        
        # Buscar "Cargador Solar Port√°til" en el texto
        if "Cargador Solar Port√°til" in text_content:
            print("‚úÖ 'Cargador Solar Port√°til' encontrado en el texto completo")
            
            # Encontrar la l√≠nea espec√≠fica
            lines = text_content.split('\n')
            for i, line in enumerate(lines):
                if "Cargador Solar Port√°til" in line:
                    print(f"üìÑ L√≠nea {i+1}: {line}")
                    break
        else:
            print("‚ùå 'Cargador Solar Port√°til' no encontrado en el texto completo")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Error: {e}")
        return False

def main():
    """Funci√≥n principal"""
    print("üöÄ Verificando fragmentos del Excel...")
    print()
    
    # Test 1: Verificar fragmentos en la colecci√≥n
    check_excel_fragments()
    
    # Test 2: B√∫squeda directa en el texto
    test_direct_search()
    
    print("\n" + "=" * 60)
    print("üìä RESUMEN")
    print("=" * 60)
    print("Si 'Cargador Solar Port√°til' est√° en el texto completo pero no en los fragmentos,")
    print("el problema est√° en c√≥mo se est√°n dividiendo los documentos.")

if __name__ == "__main__":
    main()
